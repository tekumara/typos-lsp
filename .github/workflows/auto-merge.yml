name: Dependabot Auto-merge
on:
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2

      - name: Extract merge subject
        id: merge-subject
        uses: actions/github-script@v7
        env:
          DEPENDENCY_NAMES: ${{ steps.dependabot-metadata.outputs.dependency-names }}
          NEW_VERSION: ${{ steps.dependabot-metadata.outputs.new-version }}
        with:
          script: |
            const prBody = context.payload.pull_request.body;
            const prTitle = context.payload.pull_request.title;
            const prNumber = context.payload.pull_request.number;
            const lines = prBody.split('\n');
            const dependencyNames = process.env.DEPENDENCY_NAMES;
            const newVersion = process.env.NEW_VERSION;

            let subject;
            if (dependencyNames.includes('typos-cli')) {
              const dictionaryRegex = /(Updated the dictionary.*)/;
              const dateRegex = /(?:January|February|March|April|May|June|July|August|September|October|November|December)\s+\d{4}/;

              for (const line of lines) {
                const match = line.match(dictionaryRegex);
                if (match) {
                  const dateMatch = match[1].match(dateRegex);
                  const date = dateMatch ? dateMatch[0] : '';
                  subject = `feat: typos-cli ${newVersion} - ${date} dictionary update`;
                  break;
                }
              }

              if (!subject) {
                throw new Error('Expected dictionary update in typos-cli PR but none found');
              }
            }

            subject = `${subject || prTitle} (${prNumber})`;
            console.log(subject);
            return subject;
          result-encoding: string

      - name: Enable auto-merge for Dependabot PRs
        run: echo gh pr merge --auto --squash "$PR_URL" --body "" --subject "${{ steps.merge-subject.outputs.result }}"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
